"use strict";(self.webpackChunkantm=self.webpackChunkantm||[]).push([[158],{4158:function(s,n,a){a.r(n),n.default={tile:"@antmjs/unite",docs:'<h1>@antmjs/unite</h1>\n<blockquote>\n<p>统一的开发模式</p>\n</blockquote>\n<div class="card"><h3 id="%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>为什么需要</h3>\n<p>团队人数比较多但又没有足够的精力走 CR 的情况下，如何让大家开发的模式尽量保持一致是这个库的价值</p>\n</div><div class="card"><h3 id="%E5%AE%89%E8%A3%85"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>安装</h3>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-bash">yarn add @antmjs/unite\n</code></pre>\n</div>\n</div><div class="card"><h3 id="%E6%B3%A8%E6%84%8F"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>注意</h3>\n<p>2.2.0 版本开始 Unite 里面默认移除了 H5 路由参数的 decode 处理，也就是 this.location 取到的是未 decode 过的参数，如需自动处理请添加\n@antmjs/plugin-h5-fix 插件</p>\n</div><div class="card"><h3 id="%E4%BD%BF%E7%94%A8"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>使用</h3>\n<blockquote>\n<p>非 Taro 的 H5 环境使用可添加 resolve.mainFields: [&quot;unite:h5&quot;]</p>\n</blockquote>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-jsx"><span class="hljs-comment">// 代码不多，可以自己看源码</span>\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Unite</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@antmjs/unite&#x27;</span>\n<span class="hljs-comment">// 和UI无关的全局数据定义在这里面，具体可以看项目模版</span>\n<span class="hljs-keyword">import</span> {} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/cache&#x27;</span>\n<span class="hljs-comment">// 和UI相关的全局数据定义在这里面，具体可以看项目模版</span>\n<span class="hljs-keyword">import</span> {} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/store&#x27;</span>\n\n<span class="hljs-comment">// 一切都是类型安全，一切都是自动提示 ！哈哈哈哈</span>\n<span class="hljs-comment">// Unite外的错误逻辑Unite无法捕获，Unite回调函数内的方法的异常Unite无法捕获</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">Unite</span>(\n  {\n    <span class="hljs-comment">// 和UI相关的当前页面变量定义在state里，和UI无关的当前页面变量定义在和state同层，比如tempData1,tempData2</span>\n    <span class="hljs-attr">state</span>: {},\n    <span class="hljs-attr">tempData1</span>: <span class="hljs-string">&#x27;xxx&#x27;</span>,\n    <span class="hljs-attr">tempData2</span>: <span class="hljs-string">&#x27;xxx&#x27;</span>,\n    <span class="hljs-comment">// onLoad onReady onShow 如果有发起异步请求的，记得加上async await 否则下拉刷新会打开后立即关闭</span>\n    <span class="hljs-keyword">async</span> <span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-comment">// 通过this.state可以取到state的结果</span>\n      <span class="hljs-comment">// 通过this.props可以取到props的结果</span>\n      <span class="hljs-comment">// 通过this.location可以取到路由的结果</span>\n      <span class="hljs-comment">// 通过this.loading可以取到当前正在异步加载中的方法</span>\n      <span class="hljs-comment">// 通过this.hooks可以取到下面传递过来的hooks数据</span>\n      <span class="hljs-comment">// 通过this.error可以取到错误数据，一般不需要用到，Container会通过全局Context去获取及处理</span>\n    },\n    <span class="hljs-keyword">async</span> <span class="hljs-title function_">onReady</span>(<span class="hljs-params"></span>) {},\n    <span class="hljs-keyword">async</span> <span class="hljs-title function_">onShow</span>(<span class="hljs-params"></span>) {},\n    <span class="hljs-keyword">async</span> <span class="hljs-title function_">onHide</span>(<span class="hljs-params"></span>) {},\n  },\n  <span class="hljs-comment">// 这里返回的state loading error 和上方this一致，events除了上方定义的方法外，还有部分内置的方法比如；setHooks setError</span>\n  <span class="hljs-keyword">function</span> (<span class="hljs-params">{ state, events, loading, error }, props</span>) {\n    <span class="hljs-comment">// 伪代码</span>\n    <span class="hljs-keyword">const</span> [menuButton, setMenuButton]: any = <span class="hljs-title function_">useRecoilState</span>(menuButtonStore)\n    <span class="hljs-comment">// 这里通过setHooks方法可以将全局数据及全局数据的设置方法传递过去，方法里面可以通过this.hooks[&#x27;xxx&#x27;]获取到</span>\n    events.<span class="hljs-title function_">setHooks</span>({\n      <span class="hljs-attr">xxx</span>: menuButton,\n      <span class="hljs-attr">yyy</span>: setMenuButton,\n    })\n    <span class="hljs-comment">// 这里可以写hooks</span>\n    <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> {}, [])\n    <span class="hljs-keyword">return</span> (\n      <span class="hljs-comment">// 这里可以引入Container组件包裹起来，内置导航栏、下拉刷新逻辑、自动处理异常、登录等，具体可以看Container组件</span>\n      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">View</span>&gt;</span>Unite<span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span></span>\n    )\n  },\n  <span class="hljs-comment">// cancelInterception 默认对事件都添加了“防抖”策略，即触发async方法只有等结束之后再点才有效</span>\n  { <span class="hljs-attr">page</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">cancelInterception</span>: [] },\n)\n</code></pre>\n</div>\n</div>',h3Ids:"为什么需要:::安装:::注意:::使用",codePath:[]}}}]);